import numpy as np
import tensorflow as tf
print ("Package Loaded")

sess = tf.Session()
print ("Open Session")

def print_tf(x) :
    print("Type Is\n %s" % (type(x)))
    print("Value is\n %s" % (x))
hello = tf.constant("Hello. It's Me")
print_tf(hello)

hello_out = sess.run(hello)
print_tf(hello_out)

a = tf.constant(1.5)
b = tf.constant(2.5)

print_tf(a)
print_tf(b)

a_out = sess.run(a)
b_out = sess.run(b)

print_tf(a_out)
print_tf(b_out)

a_plus_b = tf.add(a,b)
print_tf(a_plus_b)

a_plus_b_out = sess.run(a_plus_b)
print_tf(a_plus_b_out)

#a_mul_b = tf.mul(a,b)
a_mul_b = tf.multiply(a,b)
a_mul_b_out = sess.run(a_mul_b)
print_tf(a_mul_b_out)


weight = tf.Variable(tf.random_normal([5,2], stddev =0.1))
print_tf(weight)

#weight_out = sess.run(weight)
#print_tf(weight_out)

init = tf.initialize_all_variables()
sess.run(init)
print("Initializing All Variables")

weight_out = sess.run(weight)
print_tf(weight_out)

x = tf.placeholder(tf.float32, [None, 5])
print_tf(x)

oper = tf.matmul(x, weight)
print_tf(oper)

data = np.random.rand(1,5)
oper_out = sess.run(oper, feed_dict={x : data})
print_tf(oper_out)